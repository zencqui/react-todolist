{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\todo\\\\src\\\\components\\\\TodoList.tsx\",\n  _s = $RefreshSig$();\nimport { useRecoilState } from \"recoil\";\nimport { todoListState } from \"../states/todoStates\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [todoList, setTodoList] = useRecoilState(todoListState);\n  const handleCheckboxOnChange = id => {\n    setTodoList(todoList.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          isCompleted: !todo.isCompleted\n        };\n      } else {\n        return todo;\n      }\n    }));\n  };\n  const handleDeleteTodo = id => {\n    const updatedTodoList = todoList.filter(todo => todo.id !== id);\n    setTodoList(updatedTodoList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: todoList.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: todo.label\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: () => handleCheckboxOnChange(todo.id),\n        checked: todo.isCompleted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          handleDeleteTodo(todo.id);\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"Oi+JSns/bR/ePD6nLGJGeiEvdC4=\", false, function () {\n  return [useRecoilState];\n});\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useRecoilState","todoListState","React","jsxDEV","_jsxDEV","TodoList","_s","todoList","setTodoList","handleCheckboxOnChange","id","map","todo","isCompleted","handleDeleteTodo","updatedTodoList","filter","children","label","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Projects/todo/src/components/TodoList.tsx"],"sourcesContent":["import { TodoItem } from \"../models/todo.model\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { todoListState, todoItemState } from \"../states/todoStates\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst TodoList = () => {\r\n  const [todoList, setTodoList] = useRecoilState(todoListState);\r\n\r\n  const handleCheckboxOnChange = (id: string) => {\r\n    setTodoList(\r\n      todoList.map((todo) => {\r\n        if (todo.id === id) {\r\n          return { ...todo, isCompleted: !todo.isCompleted };\r\n        } else {\r\n          return todo;\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleDeleteTodo = (id: string) => {\r\n    const updatedTodoList = todoList.filter((todo) => todo.id !== id);\r\n    setTodoList(updatedTodoList);\r\n  };\r\n\r\n  return (\r\n    <ul>\r\n      {todoList.map((todo) => (\r\n        <div key={todo.id}>\r\n          <li key={todo.id}>{todo.label}</li>\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={() => handleCheckboxOnChange(todo.id)}\r\n            checked={todo.isCompleted}\r\n          ></input>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              handleDeleteTodo(todo.id);\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"],"mappings":";;AACA,SAASA,cAAc,QAAQ,QAAQ;AACvC,SAASC,aAAa,QAAuB,sBAAsB;AACnE,OAAOC,KAAK,MAAoB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,cAAc,CAACC,aAAa,CAAC;EAE7D,MAAMQ,sBAAsB,GAAIC,EAAU,IAAK;IAC7CF,WAAW,CACTD,QAAQ,CAACI,GAAG,CAAEC,IAAI,IAAK;MACrB,IAAIA,IAAI,CAACF,EAAE,KAAKA,EAAE,EAAE;QAClB,OAAO;UAAE,GAAGE,IAAI;UAAEC,WAAW,EAAE,CAACD,IAAI,CAACC;QAAY,CAAC;MACpD,CAAC,MAAM;QACL,OAAOD,IAAI;MACb;IACF,CAAC,CACH,CAAC;EACH,CAAC;EAED,MAAME,gBAAgB,GAAIJ,EAAU,IAAK;IACvC,MAAMK,eAAe,GAAGR,QAAQ,CAACS,MAAM,CAAEJ,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKA,EAAE,CAAC;IACjEF,WAAW,CAACO,eAAe,CAAC;EAC9B,CAAC;EAED,oBACEX,OAAA;IAAAa,QAAA,EACGV,QAAQ,CAACI,GAAG,CAAEC,IAAI,iBACjBR,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAmBL,IAAI,CAACM;MAAK,GAApBN,IAAI,CAACF,EAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CAAC,eACnClB,OAAA;QACEmB,IAAI,EAAC,UAAU;QACfC,QAAQ,EAAEA,CAAA,KAAMf,sBAAsB,CAACG,IAAI,CAACF,EAAE,CAAE;QAChDe,OAAO,EAAEb,IAAI,CAACC;MAAY;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACTlB,OAAA;QACEmB,IAAI,EAAC,QAAQ;QACbG,OAAO,EAAEA,CAAA,KAAM;UACbZ,gBAAgB,CAACF,IAAI,CAACF,EAAE,CAAC;QAC3B,CAAE;QAAAO,QAAA,EACH;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAdDV,IAAI,CAACF,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAeZ,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET,CAAC;AAAChB,EAAA,CA1CID,QAAQ;EAAA,QACoBL,cAAc;AAAA;AAAA2B,EAAA,GAD1CtB,QAAQ;AA4Cd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}