{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\todo\\\\src\\\\components\\\\TodoList.tsx\",\n  _s = $RefreshSig$();\nimport { useRecoilState } from \"recoil\";\nimport { todoListState } from \"../states/todoStates\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [todoList, setTodoList] = useRecoilState(todoListState);\n  //const [todoItem, setTodoItem] = useRecoilState(todoItemState);\n\n  const handleCheckboxOnChange = (id, isCompleted) => {\n    const initialTodoList = [...todoList];\n    const todoItemResult = initialTodoList.find(a => a.id === id);\n    (todoItemResult === null || todoItemResult === void 0 ? void 0 : todoItemResult.isCompleted) === isCompleted;\n\n    // const updatedTodoList = todoList.map((todo) => {\n    //   if (todo.id === id) {\n    //     todo.isCompleted = !todo.isCompleted;\n    //   }\n\n    //   return todo;\n    // });\n\n    //setTodoList(updatedTodoList);\n  };\n  const handleDeleteTodo = id => {\n    const updatedTodoList = todoList.filter(todo => todo.id !== id);\n    setTodoList(updatedTodoList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: todoList.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: todo.label\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: () => handleCheckboxOnChange(todo.id, todo.isCompleted),\n        checked: todo.isCompleted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          handleDeleteTodo(todo.id);\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"Oi+JSns/bR/ePD6nLGJGeiEvdC4=\", false, function () {\n  return [useRecoilState];\n});\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useRecoilState","todoListState","React","jsxDEV","_jsxDEV","TodoList","_s","todoList","setTodoList","handleCheckboxOnChange","id","isCompleted","initialTodoList","todoItemResult","find","a","handleDeleteTodo","updatedTodoList","filter","todo","children","map","label","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Projects/todo/src/components/TodoList.tsx"],"sourcesContent":["import { TodoItem } from \"../models/todo.model\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { todoListState } from \"../states/todoStates\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst TodoList = () => {\r\n  const [todoList, setTodoList] = useRecoilState(todoListState);\r\n  //const [todoItem, setTodoItem] = useRecoilState(todoItemState);\r\n\r\n  const handleCheckboxOnChange = (id: string, isCompleted: boolean) => {\r\n    const initialTodoList = [...todoList];\r\n    const todoItemResult = initialTodoList.find((a) => a.id === id);\r\n\r\n    todoItemResult?.isCompleted === isCompleted;\r\n\r\n    // const updatedTodoList = todoList.map((todo) => {\r\n    //   if (todo.id === id) {\r\n    //     todo.isCompleted = !todo.isCompleted;\r\n    //   }\r\n\r\n    //   return todo;\r\n    // });\r\n\r\n    //setTodoList(updatedTodoList);\r\n  };\r\n\r\n  const handleDeleteTodo = (id: string) => {\r\n    const updatedTodoList = todoList.filter((todo) => todo.id !== id);\r\n    setTodoList(updatedTodoList);\r\n  };\r\n\r\n  return (\r\n    <ul>\r\n      {todoList.map((todo) => (\r\n        <div key={todo.id}>\r\n          <li key={todo.id}>{todo.label}</li>\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={() => handleCheckboxOnChange(todo.id, todo.isCompleted)}\r\n            checked={todo.isCompleted}\r\n          ></input>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              handleDeleteTodo(todo.id);\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"],"mappings":";;AACA,SAASA,cAAc,QAAQ,QAAQ;AACvC,SAASC,aAAa,QAAQ,sBAAsB;AACpD,OAAOC,KAAK,MAAoB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,cAAc,CAACC,aAAa,CAAC;EAC7D;;EAEA,MAAMQ,sBAAsB,GAAGA,CAACC,EAAU,EAAEC,WAAoB,KAAK;IACnE,MAAMC,eAAe,GAAG,CAAC,GAAGL,QAAQ,CAAC;IACrC,MAAMM,cAAc,GAAGD,eAAe,CAACE,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACL,EAAE,KAAKA,EAAE,CAAC;IAE/D,CAAAG,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEF,WAAW,MAAKA,WAAW;;IAE3C;IACA;IACA;IACA;;IAEA;IACA;;IAEA;EACF,CAAC;EAED,MAAMK,gBAAgB,GAAIN,EAAU,IAAK;IACvC,MAAMO,eAAe,GAAGV,QAAQ,CAACW,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACT,EAAE,KAAKA,EAAE,CAAC;IACjEF,WAAW,CAACS,eAAe,CAAC;EAC9B,CAAC;EAED,oBACEb,OAAA;IAAAgB,QAAA,EACGb,QAAQ,CAACc,GAAG,CAAEF,IAAI,iBACjBf,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAmBD,IAAI,CAACG;MAAK,GAApBH,IAAI,CAACT,EAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CAAC,eACnCtB,OAAA;QACEuB,IAAI,EAAC,UAAU;QACfC,QAAQ,EAAEA,CAAA,KAAMnB,sBAAsB,CAACU,IAAI,CAACT,EAAE,EAAES,IAAI,CAACR,WAAW,CAAE;QAClEkB,OAAO,EAAEV,IAAI,CAACR;MAAY;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACTtB,OAAA;QACEuB,IAAI,EAAC,QAAQ;QACbG,OAAO,EAAEA,CAAA,KAAM;UACbd,gBAAgB,CAACG,IAAI,CAACT,EAAE,CAAC;QAC3B,CAAE;QAAAU,QAAA,EACH;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAdDP,IAAI,CAACT,EAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAeZ,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET,CAAC;AAACpB,EAAA,CAhDID,QAAQ;EAAA,QACoBL,cAAc;AAAA;AAAA+B,EAAA,GAD1C1B,QAAQ;AAkDd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}